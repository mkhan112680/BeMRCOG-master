<style>
    .invisible-search-box {
        display: none;
    }

    .invisible-search-box-module {
        display: none;
    }

    .invisible-search-box-topic {
        display: none;
    }

    .k-filter-row {
        display: none;
    }

    .section {
        border: solid 1px lightgray;
    }

    hr {
        display: block;
        height: 1px;
        border: 0;
        border-top: 1px solid #ccc;
        margin: 1em 0;
        padding: 0;
    }

    .gridheader {
        background-color: lightblue;
        padding: 10px;
        font-weight: bold;
    }
</style>
<div id="example">
    <div class="demo-section k-content">
        <div id="tabstrip">
            <ul>
                <li class="k-state-active">
                    Courses
                </li>
                <li>
                    Modules
                </li>
                <li>
                    Topics
                </li>
                <li>
                    Units
                </li>
                <li>
                    Quizes
                </li>
                <li>
                    Questions
                </li>
            </ul>
            <div id="div-courses">
                <div class="form-group">
                    <select class="form-control" id="dd-course-viewmode">
                        <option class="" value="1">View Courses</option>
                        <option class="" value="2">Add Courses</option>
                    </select>
                </div>
                <div id="div1" style="display:none">
                    <div class="form-group">
                        <table class="table table-condensed">
                            <tr>
                                <td>
                                    <label for="txt-new-course" class="col-sm-2 col-form-label col-form-label-sm">Name</label>
                                    <div class="col-sm-10">
                                        <input class="form-control form-control-sm" id="txt-new-course" placeholder="Name">
                                    </div>
                                </td>
                                <td>
                                    <label for="txt-course-desc" class="col-sm-2 col-form-label">Description</label>
                                    <div class="col-sm-10">
                                        <input class="form-control" id="txt-course-desc" placeholder="Missing in  DB">
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <hr />
                    <div class=" form-group row text-center mainApp">
                        <div class="form-inline">
                            <label class="col-form-label col-form-label-sm">Search Modules</label>
                            <input type="text" id="txt-search-module" class="k-textbox" />
                            <span id="span-coursemodule-addition-status" style="color:red"></span>
                            <button class="btn btn-default" v-on:click="AddModule">
                                Add To Current Course
                            </button>
                        </div>
                        <hr />
                        <div class="form-inline">
                            <label class="col-form-label col-form-label-sm">Currently Added Modules</label>
                            <div class="form-inline gridheader">
                                <div class="col-sm-4 ">ID</div>
                                <div class="">Name</div>
                            </div>
                            <div id="div-coursemodules-added">
                                <div class="form-inline" v-for="module in modules">
                                    <div class="col-sm-4 ">{{module.ID}}</div>
                                    <div class="">{{module.Name}}</div>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="form-inline">
                            @*<label class="col-form-label col-form-label-sm">Full Package Price</label>
                                <input type="text" id="txt-package-price" class="k-textbox" />*@
                            <a href="" class="btn btn-default" id="hl-addPackages">Add Packages</a>
                        </div>
                        <br />
                        <div class="form-inline">
                            <label class="col-form-label col-form-label-sm">Currently Added Packages</label>
                            <div class="form-inline gridheader">
                                <div class="col-sm-3 ">ID</div>
                                <div class="col-sm-3">Name</div>
                                <div class="col-sm-3">Module Count</div>
                                <div class="">Price</div>
                            </div>
                            <div id="coursepackages">
                                <div class="form-inline" v-for="package in packages">
                                    <div class="col-sm-3">{{package.ID}}</div>
                                    <div class="col-sm-3">{{package.Name}}</div>
                                    <div class="col-sm-3">{{package.ModuleCount}}</div>
                                    <div class="">${{package.Price}}</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group row text-center">
                        <button id="btn-new-course" data-url='@Url.Action("AddCourse","Home")' class="btn btn-primary">Save New Course</button>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-12 text-center">
                            <span id="span-course-result" style="color:green" class="small"></span>
                        </div>
                    </div>
                </div>
                <div id="div2">
                    <div>
                        <div class="form-inline text-center">
                            <label for="txt-course-search" class="col-form-label col-form-label-sm">Search Courses By Name</label>
                            <input type="text" id="txt-course-search" class="k-textbox" />
                        </div>
                        <br />
                        <div id="div-grid-course"></div>
                    </div>
                </div>
            </div>
            <div id="div-modules">
                <div class="form-group  row">
                    <div class="col-sm-10">
                        <div class="form-inline">
                            <input class="form-control" id="txt-new-module" placeholder="New Module">
                            <button id="btn-new-module" data-url='@Url.Action("AddModule","Home")' class="btn btn-default form-control">Add New Module</button>
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-10">
                        <span id="span-module-result" style="color:red" class="small"></span>
                    </div>
                </div>
                <div class="form-inline text-center">
                    <label for="txt-module-search" class="k-content label label-info ">Search By Name</label>
                    <input type="text" id="txt-module-search" class="k-textbox" />
                </div>
                <div id="div-grid-module"></div>
            </div>
            <div id="div-topics">
                <div class="form-group  row">
                    <div class="col-sm-10">
                        <div class="form-inline">
                            <input class="form-control" id="txt-new-topic" placeholder="New Topic">
                            <button id="btn-new-topic" data-url='@Url.Action("AddTopic","Home")' class="btn btn-default form-control">Add New Topic</button>
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-10">
                        <span id="span-topic-result" style="color:red" class="small"></span>
                    </div>
                </div>
                <div class="form-inline text-center">
                    <label for="txt-topic-search" class="k-content label label-info ">Search By Name</label>
                    <input type="text" id="txt-topic-search" class="k-textbox" />
                </div>
                <div id="div-grid-topic"></div>
            </div>
            <div>
                Somethign Something Something........
            </div>
        </div>
    </div>
</div>
<div id="previewCourseModal" class="modal animated slideInUp">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div id="div-course-preview"></div>
        </div>
    </div>
</div>
<div id="addPackageModal" class="modal animated slideInUp">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div style="padding:20px;">
                <div id="div-new-package"></div>
            </div>
        </div>
    </div>
</div>
<script id="moduleDetailTemplate" type="text/x-kendo-tmpl">
    <a href="javascript:void(0)" data-toggle="modal" data-target="\\#assetDetailModal">#=ModuleCount#</a>
</script>
<script id="previewCourseTemplate" type="text/x-kendo-tmpl">
    <a class="btn btn-default" href="javascript:void(0)" data-toggle="modal" data-target="\\#previewCourseModal">Preview</a>
</script>
<script id="topicDetailTemplate" type="text/x-kendo-tmpl">
    <a href="javascript:void(0)" data-toggle="modal" data-target="\\#assetDetailModal">#=TopicCount#</a>
</script>
<script id="courseDetailsColsTemplate" type="text/x-kendo-tmpl">
    <div class="row">
        @*<div class="col-sm-3">#=ID#</div>*@
        <span class="col-form-label col-form-label-sm">#=Name#</span>
    </div>
</script>
<script id="topicDetailsColsTemplate" type="text/x-kendo-tmpl">
    <div class="row">
        @*<div class="col-sm-3">#=ID#</div>*@
        <label class="col-form-label col-form-label-sm">#=Name#</label>
    </div>
</script>
<script id="newModuleAddedToCourseTemplate" type="text/x-kendo-tmpl">
    <div class="form-inline">
        <div class="col-sm-4 moduleid">#=ID#</div>
        <div class="">#=Name#</div>
    </div>
</script>
<script id="newPackageTemplate" type="text/x-kendo-tmpl">
    <div class="form-inline">
        <div class="col-sm-4 packageid">#=ID#</div>
        <div class="col-sm-4">#=Name#</div>
        <div class="">$#=Price#</div>
    </div>
</script>
<script>
    $(document).ready(function () {

        function ModuleExists(lst , moduleID) {
            return lst.some(function (el) {
                return el.ID === moduleID;
            });
        }
        function PackageExists(lst, packageID) {
            return lst.some(function (el) {
                return el.ID === packageID;
            });
        }

        var courseApp = new Vue({
            el: '.mainApp',
            data: {
                modules: [],
                packages: []
            },
            methods: {

                Clear: function () {
                    this.modules = [];
                    this.packages = [];
                },

                AddModule: function () {

                    var value = $("#txt-search-module").val();
                    if (value.length == 0)
                        return;
                    var moduleID = $("#txt-search-module").attr("dataid");
                    if (!ModuleExists(this.modules, moduleID)) {
                        var newModule = { ID: moduleID, Name: value };
                        this.modules.push(newModule);
                    }
                },
                GetModules: function () {
                    //console.log(this.modules);
                    return this.modules.map( p  => p.ID);
                },

                AddPackage: function (data) {

                    if (!PackageExists(this.packages, data.ID)) {
                        this.packages.push(data);
                    }
                },
                GetPackages: function () {
                    //console.log(this.modules);
                    return this.packages.map(p => p.ID);
                }
            }
        });

        function onSearchContractsAutoComplete(e) {
            return { searchTerm: $("#txt-search-module").val() };
        }

        $("#dd-course-viewmode").change(function () {

            var selected = $(this).val();
            //alert(selected);
            switch (selected) {

                case "1":

                    $("#div1").hide();
                    $("#div2").show();

                    break;

                case "2":

                    $("#div1").show();
                    $("#div2").hide();

                    break;

                default:
            }
        });

        $("#txt-search-module").kendoAutoComplete({
            //minLength: 3,
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: '@Url.Action("AutoCompleteModule", "Home")',
                        dataType: "json",
                        data: onSearchContractsAutoComplete,
                    }
                },
            },
            select: function (e) {

                if (e.item == null) return;
                var DataItem = this.dataItem(e.item.index());
                $("#txt-search-module").attr("dataid", DataItem.ID);
            },
            //filter: "startswith",
            dataTextField: "Name",
            placeholder: "Search Modules",
           // headerTemplate: "<h4>hi</h4>",
            footerTemplate: "<span class='small text-muted text-center'>Total <span style='color:red'>#: instance.dataSource.total() #</span>  items found</span>",
            template: "<p role='gridcell'><div class='text-center'><span class='badge'>#=Name#</span></div></p>"
        });

        //Courses
        $('#txt-course-search').on('keyup', function () {
            $('.invisible-search-box').val($(this).val()).trigger("change");;
        });

        function GetModulesSelected() {
            return courseApp.GetModules();
        }

        function GetPackagesSelected() {
            return courseApp.GetPackages();

        }

        //$(".btn-course-preview").click(function (e) {
        $(document).on("click", ".btn-course-preview", function (e) {

            e.preventDefault();
            $("#previewCourseModal").modal("show");
            $.ajax({
                //method: 'post',
                url: '@Url.Action("PreviewCourse","Home")',
                data: { courseID: $(this).data("rowid") },
                success: function (data) {

                   $("#div-course-preview").html("<div class='text-center'><img src='../Images/ajax-loader.gif' /></div>");
                    $("#div-course-preview").html(data);
                },
                error: function (request, status, error) {
                }
            });
        });

        $(document).on("click", "#hl-addPackages", function (e) {

            e.preventDefault();
            $("#addPackageModal").modal("show");

            $.ajax({
                //method: 'post',
                url: '@Url.Action("_NewPackage","Home")',
                //data: { courseID :1 },
                success: function (data) {

                    $("#div-new-package").html("<div class='text-center'><img src='../Images/ajax-loader.gif' /></div>");
                    $("#div-new-package").html(data);
                },
                error: function (request, status, error) {
                }
            });
        });

        //$("#btn-package-add-new").click(function (e) {
        $(document).on('click', '#btn-package-add-new', function (e) {

            e.preventDefault();

            var Data = {
                Name: $("#txt-package-email").val(),
                Price: $("#txt-package-price").val(),
                ModuleCount : $("#txt-package-moduleCount").val()
            };

            $.ajax({
                method: 'post',
                url: '@Url.Action("CreatePackage", "Home")',
                data: Data,
                success: function (data) {

                    var newPackage = {
                                        ID: data.ID,
                                        Name: Data.Name,
                                        Price: Data.Price,
                                        ModuleCount: Data.ModuleCount};

                    courseApp.AddPackage(newPackage);

                    $("#addPackageModal").modal("hide");
                },
                error: function (request, status, error) {
                }
            });
        });

        $("#btn-new-course").click(function () {
            //price: $("#txt-package-price").val()
            $.ajax({
                method: 'post',
                url: $("#btn-new-course").data("url"),
                data: {
                    name: $("#txt-new-course").val(),
                    description: $("#txt-course-desc").val(),
                    modules: GetModulesSelected(),
                    packages: GetPackagesSelected()
                },
                success: function (data) {

                    $("#span-course-result").html(data.Message);

                    $("#txt-new-course").val("");
                    $("#txt-course-desc").val("");
                    $("#txt-search-module").val("");


                    courseApp.Clear();

                    LoadCourseGrid();
                },
                error: function (request, status, error) {
                }
            });
        });

        var LoadCourseGrid = function () {

            //if ($("#div-grid-course").data("kendoGrid") != null)
            //    $("#div-grid-course").kendoGrid('destroy').empty();

            $("#div-grid-course").kendoGrid({
               dataSource:{
                transport: {
                    read:    {
                                url: '@Url.Action("Courses", "Home")',
                                dataType: "json",
                                //data: onAssetGrid_Read(),
                            }
                        },
                    },
                filterable: {
                    mode: "row",
                },
                noRecords: {
                    template: "<label class='label label-default font-weight-bold text-danger'>No Courses Found.</label>"
                },
                columns: [
                    {
                        title: "ID",
                        field: "ID",
                        hidden: true
                    },

                    {
                        title: "Name",
                        field: "Name",
                        headerAttributes: { style: "text-align:left" },
                        attributes: { style: "text-align:left;" },
                        filterable: {
                            cell: {
                                operator: "contains",
                                template: function (args) {
                                    args.element.css("width", "100%").addClass("k-textbox invisible-search-box").keydown(function (e) {
                                        setTimeout(function () {
                                            $(e.target).trigger("change");
                                        });
                                    });
                                },
                                showOperators: false
                            }
                        }
                    },

                    {
                        title: "Module Count",
                        template: kendo.template($("#moduleDetailTemplate").html()),
                        headerAttributes: { style: "text-align:center;width:200px;" },
                        attributes: {
                            style: "text-align: center;width:200px;"
                        },
                        width: "200px",
                    },

                    {
                        title: "Preview",
                        //template: kendo.template($("#previewCourseTemplate").html()),
                        template: '<a data-rowid="#=ID#" class=\'btn btn-default btn-course-preview \' href=\'@Url.Action("CoursePreview","Home")\'>Preview</a>',
                        headerAttributes: { style: "text-align:center;" },
                        attributes: {
                            style: "text-align: center;"
                        },
                        width: "200px",

                    }
                ],
                height: 600,
                scrollable: true,
                selectable: true,
                sortable: true,
                pageable: false,
                detailInit: detailInitCourses
                //change: contractsGrid_OnChange,
                //dataBound: contractsGrid_onDataBound
            });
        };

        function detailInitCourses(e) {

            var url = '@Url.Action("CourseDetail", "Home")';
            var qs = '?courseID=' + e.data.ID.toString();

            $('<div class="grid-no-header border-0 rowDetails-noPadder"></div>').appendTo(e.detailCell)
                .kendoGrid({
                    dataSource: {
                        transport: {
                            read: {
                                url: url + qs,
                                dataType: "json",
                            }
                        },
                    },
                    noRecords: {
                        template: "<label class='label label-default font-weight-bold text-danger'>No Modules Found.</label>"
                    },
                    columns: [{
                        template: kendo.template($("#courseDetailsColsTemplate").html()),
                    }],
                   // dataBound: assetDetail_databound,
                });
        }

        //Courses


        //Modules
          $('#txt-module-search').on('keyup', function () {
            $('.invisible-search-box-module').val($(this).val()).trigger("change");;

        });

        $("#btn-new-module").click(function () {

            $.ajax({
                url: $("#btn-new-module").data("url"),
                data: { name: $("#txt-new-module").val() },
                success: function (data) {

                    $("#span-module-result").html(data.Message);
                    $("#txt-new-module").val("");
                    LoadModuleGrid();

                },
                error: function (request, status, error) {
                }
            });
        });

        var LoadModuleGrid = function () {

            $("#div-grid-module").kendoGrid({
               dataSource:{
                transport: {
                    read:    {
                                url: '@Url.Action("Modules", "Home")',
                                dataType: "json",
                                //data: onAssetGrid_Read(),
                            }
                        },
                    },
                filterable: {
                    mode: "row",
                },
                noRecords: {
                    template: "<label class='label label-default font-weight-bold text-danger'>No Modules Found.</label>"
                },
                columns: [
                    {
                        title: "ID",
                        field: "ID",
                        hidden: true
                    },
                    {
                        title: "Topic Count",
                        template: kendo.template($("#topicDetailTemplate").html()),
                        width: "200px",
                    },
                    {
                        title: "Name",
                        field: "Name",
                        headerAttributes: { style: "text-align:center" },
                        attributes: { style: "text-align:center;" },
                        filterable: {
                            cell: {
                                operator: "contains",
                                template: function (args) {
                                    args.element.css("width", "100%").addClass("k-textbox invisible-search-box-module").keydown(function (e) {
                                        setTimeout(function () {
                                            $(e.target).trigger("change");
                                        });
                                    });
                                },
                                showOperators: false
                            }
                        }
                    }
                ],
                height: 350,
                scrollable: true,
                selectable: true,
                sortable: true,
                pageable: false,
                detailInit: detailInitModules
                //change: contractsGrid_OnChange,
                //dataBound: contractsGrid_onDataBound
            });
        };


        function detailInitModules(e) {

            var url = '@Url.Action("ModuleDetail", "Home")';
            var qs = '?moduleID=' + e.data.ID.toString();

            $('<div class="grid-no-header border-0 rowDetails-noPadder"></div>').appendTo(e.detailCell)
                .kendoGrid({
                    dataSource: {
                        transport: {
                            read: {
                                url: url + qs,
                                dataType: "json",
                            }
                        },
                    },
                    columns: [{
                        template: kendo.template($("#topicDetailsColsTemplate").html()),
                    }],
                   // dataBound: assetDetail_databound,
                });
        }
        //Modules

        //Topics
         $('#txt-topic-search').on('keyup', function () {
             $('.invisible-search-box-topic').val($(this).val()).trigger("change");;

        });

        $("#btn-new-topic").click(function () {

            $.ajax({
                url: $("#btn-new-topic").data("url"),
                data: { name: $("#txt-new-topic").val() },
                success: function (data) {

                    $("#span-topic-result").html(data.Message);
                    $("#txt-new-topic").val("");
                    LoadTopicGrid();

                },
                error: function (request, status, error) {
                }
            });
        });

        var LoadTopicGrid = function () {

            $("#div-grid-topic").kendoGrid({
               dataSource:{
                transport: {
                    read:    {
                                url: '@Url.Action("Topics", "Home")',
                                dataType: "json",
                                //data: onAssetGrid_Read(),
                            }
                        },
                    },
                filterable: {
                    mode: "row",
                },
                noRecords: {
                    template: "<label class='label label-default font-weight-bold text-danger'>No Topics Found.</label>"
                },
                columns: [
                    {
                        title: "ID",
                        field: "ID",
                        hidden: true
                    },
                    {
                        title: "Name",
                        field: "Name",
                        headerAttributes: { style: "text-align:center" },
                        attributes: { style: "text-align:center;" },
                        filterable: {
                            cell: {
                                operator: "contains",
                                template: function (args) {
                                    args.element.css("width", "100%").addClass("k-textbox invisible-search-box-topic").keydown(function (e) {
                                        setTimeout(function () {
                                            $(e.target).trigger("change");
                                        });
                                    });
                                },
                                showOperators: false
                            }
                        }
                    }
                ],
                height: 350,
                scrollable: true,
                selectable: true,
                sortable: true,
                pageable: false,
                //change: contractsGrid_OnChange,
                //dataBound: contractsGrid_onDataBound
            });
        };

        //Topics

        var LoadTabs = function () {
            $("#tabstrip").kendoTabStrip({
                animation: {
                    open: {
                        effects: "fadeIn"
                    }
                }
            });
        }

        LoadTabs();
        LoadCourseGrid();
        LoadModuleGrid();
        LoadTopicGrid();
    });
</script>